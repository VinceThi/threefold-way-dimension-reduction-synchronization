spec(W) =  [ 0.2  0.2  0.2 -0.2 -0.2 -0.2] 
 spec(K) =  [1. 3. 2. 2. 2. 2.] 
 spec(A) =  [ 2.17532775e+00  1.12603250e+00 -2.17532775e+00 -1.12603250e+00
 -1.23259516e-32  1.25764547e-16] 
 
 

Frequency reduction 
 
 redW0 = M_omega W M_omega^+ =
 [[ 0.2  0. ]
 [ 0.  -0.2]] 
 
 spec(redW) =  [ 0.2 -0.2] 
 
 np.sqrt(||M_omega W - M_omega W M_omega^+M_omega ||^2) = 0.0 
 
 redK0 = M_omega K M_omega^+ =
 [[2. 0.]
 [0. 2.]] 
 
 np.sqrt(||M_omega K - M_omega K M_omega^+M_omega ||^2) = 0.13608276348795434 
 
 spec(redK) =  [2. 2.] 
 
 redA = M_omega A M_omega^+ =
 [[0. 2.]
 [2. 0.]] 
 
 spec(redA) =  [ 2. -2.] 
 
 np.sqrt(||M_omega A - M_omega A M_omega^+M_omega ||^2) = 0.13608276348795434 
 
 

Degree reduction 
 
 redW0 = M_k W M_k^+ = 
 [[ 0.2  0.   0. ]
 [ 0.   0.2  0. ]
 [ 0.   0.  -0.1]] 
 
 spec(redW) =  [ 0.2  0.2 -0.1] 
 
 np.sqrt(||M_k W - M_k W M_k^+M_k ||^2) = 0.020412414523193156 
 
 redK = M_k K M_k^+ =
 [[1. 0. 0.]
 [0. 3. 0.]
 [0. 0. 2.]] 
 
 spec(redK) =  [1. 3. 2.] 
 
 np.sqrt(||M_k K - M_k K M_k^+M_k ||^2) = 0.0 
 
 redA0 = M_k A M_k^+ =
 [[0.   0.   1.  ]
 [0.   0.   3.  ]
 [0.25 0.75 1.  ]] 
 
 spec(redA) =  [ 2.15831240e+00 -8.29414662e-17 -1.15831240e+00] 
 
 np.sqrt(||M_k A - M_k A M_k^+M_k ||^2) = 0.3004626062886658 
 
 

Spectral reduction 
 
 V =  [[ 0.14942925  0.55767754  0.40824829  0.32505758  0.44403692  0.44403692]
 [ 0.14942925  0.55767754  0.40824829 -0.32505758 -0.44403692 -0.44403692]] 
 
 V^+ =  [[ 0.14942925  0.14942925]
 [ 0.55767754  0.55767754]
 [ 0.40824829  0.40824829]
 [ 0.32505758 -0.32505758]
 [ 0.44403692 -0.44403692]
 [ 0.44403692 -0.44403692]]  = V^T 
 
 Vérif VEPs:
 2.175327747161075 
 -2.175327747161075 
 
 C = M_k V^+ =
 [[ 0.37178502  0.37178502]
 [ 0.40437714 -0.40437714]] 
 
 C^T C =
 [[ 0.30174497 -0.02529677]
 [-0.02529677  0.30174497]] 
 
 C^+ C =
 [[ 1.00000000e+00 -2.77555756e-16]
 [-1.11022302e-16  1.00000000e+00]] 
 
 M =  [[ 1.33974596e-01  5.00000000e-01  3.66025404e-01 -5.02003175e-17
   0.00000000e+00 -3.34668783e-17]
 [ 1.13158137e-16  1.69737205e-16  0.00000000e+00  2.67949192e-01
   3.66025404e-01  3.66025404e-01]] 
 
 L1 error = np.mean(|M - M_omega|) =  0.044123813003330424 
 
 M M^+ =
 [[ 1.00000000e+00  1.84930721e-16]
 [-4.31408308e-32  1.00000000e+00]] 
 
 M^+ M =
 [[ 4.46581987e-02  1.66666667e-01  1.22008468e-01  8.17594175e-17
   1.34543744e-16  1.23388118e-16]
 [ 1.66666667e-01  6.22008468e-01  4.55341801e-01  5.25665328e-17
   1.57115567e-16  1.15482204e-16]
 [ 1.22008468e-01  4.55341801e-01  3.33333333e-01 -4.81267154e-17
  -3.29227071e-18 -3.37700080e-17]
 [ 5.29713398e-17 -1.50766266e-18 -9.91015069e-17  2.11324865e-01
   2.88675135e-01  2.88675135e-01]
 [ 9.52184988e-17  8.32488426e-17 -7.29251308e-17  2.88675135e-01
   3.94337567e-01  3.94337567e-01]
 [ 8.40628727e-17  4.16154792e-17 -1.03402868e-16  2.88675135e-01
   3.94337567e-01  3.94337567e-01]] 
 
 redW = M W M^+ =
 [[ 2.00000000e-01  6.72450613e-17]
 [ 9.95501348e-17 -2.00000000e-01]] 
 
 spec(redW) =  [ 0.2 -0.2] 
 
 np.sqrt(||M W - M W M^+M ||^2) = 1.6860774932102092e-17 
 
 redK = M K M^+ =
 [[2.57735027e+00 5.35238871e-16]
 [1.73436579e-16 2.00000000e+00]] 
 
 spec(redK) =  [2.57735027 2.        ] 
 
 np.sqrt(||M K - M K M^+M ||^2) = 0.10566243270259355 
 
 redA = M A M^+ =
 [[-7.40139955e-16  2.36602540e+00]
 [ 2.00000000e+00  1.11000140e-15]] 
 
 spec(redA) =  [-2.17532775  2.17532775] 
 
 np.sqrt(||M A - M A M^+M ||^2) = 1.7260869029176642e-16
 
 
 
 
Spectral reduction 3D 
 
 V_3D =  [[ 1.49429245e-01  5.57677536e-01  4.08248290e-01  3.25057584e-01
   4.44036917e-01  4.44036917e-01]
 [ 5.57677536e-01  1.49429245e-01 -4.08248290e-01  6.27963030e-01
  -2.29850422e-01 -2.29850422e-01]
 [ 5.77350269e-01 -5.77350269e-01  5.77350269e-01  7.26101949e-17
  -3.12409764e-16  1.50620150e-16]] 
 
 V_3D^+ =  [[ 1.49429245e-01  5.57677536e-01  5.77350269e-01]
 [ 5.57677536e-01  1.49429245e-01 -5.77350269e-01]
 [ 4.08248290e-01 -4.08248290e-01  5.77350269e-01]
 [ 3.25057584e-01  6.27963030e-01  4.05559976e-17]
 [ 4.44036917e-01 -2.29850422e-01 -3.48032225e-16]
 [ 4.44036917e-01 -2.29850422e-01  1.79196425e-16]]  = V_3D^T 
 
 Vérif VEPs 3D:
 2.175327747161075 
 1.1260325006104943 
 -7.395570986446988e-32 
 
 C_3D = M_k V^+ =
 [[ 0.14942925  0.55767754  0.57735027]
 [ 0.55767754  0.14942925 -0.57735027]
 [ 0.40534493 -0.05999653  0.14433757]] 
 
 C_3D^T C_3D =
 [[ 0.49763784  0.14234738 -0.17719576]
 [ 0.14234738  0.33693292  0.22704251]
 [-0.17719576  0.22704251  0.6875    ]] 
 
 C_3D^+ C_3D =
 [[ 1.00000000e+00 -3.74520198e-17  1.01674926e-17]
 [-1.55751991e-16  1.00000000e+00  1.75225651e-16]
 [-7.25116377e-17  7.62547216e-17  1.00000000e+00]] 
 
 M_3D =  [[ 0.70787939 -0.17696985  0.17696985  0.42342583 -0.06565261 -0.06565261]
 [-0.16102861  0.64411444 -0.16102861  0.26580673  0.20606803  0.20606803]
 [ 0.1105392   0.13386726  0.27354127  0.09416508  0.1939436   0.1939436 ]] 
 
 M_3D M_3D^+ =
 [[ 1.00000000e+00  8.32667268e-17  0.00000000e+00]
 [-2.77555756e-17  1.00000000e+00  1.80411242e-16]
 [ 2.42861287e-17  1.11022302e-16  1.00000000e+00]] 
 
 M_3D^+ M_3D =
 [[ 6.66666667e-01 -1.66666667e-01  1.66666667e-01  3.98773985e-01
  -6.18303154e-02 -6.18303154e-02]
 [-1.66666667e-01  6.66666667e-01 -1.66666667e-01  2.75113354e-01
   2.13283039e-01  2.13283039e-01]
 [ 1.66666667e-01 -1.66666667e-01  6.66666667e-01 -1.23660631e-01
   2.75113354e-01  2.75113354e-01]
 [ 3.98773985e-01  2.75113354e-01 -1.23660631e-01  5.00000000e-01
  -1.74715884e-16 -7.84981271e-17]
 [-6.18303154e-02  2.13283039e-01  2.75113354e-01 -2.10044732e-16
   2.50000000e-01  2.50000000e-01]
 [-6.18303154e-02  2.13283039e-01  2.75113354e-01 -9.90224295e-17
   2.50000000e-01  2.50000000e-01]] 
 
 redW_3D = M_3D W M_3D^+ =
 [[ 0.04687219 -0.12875036  0.15266611]
 [-0.04265     0.11715268 -0.13891413]
 [ 0.01104523 -0.03033948  0.03597513]] 
 
 spec(redW_3D) =  [ 2.00000000e-01  1.60509856e-16 -1.46047178e-16] 
 
 np.sqrt(||M_3D W - M_3D W M_3D^+M_3D ||^2) = 0.043593401191037794 
 
 redK_3D = M_3D K M_3D^+ =
 [[ 1.33333333e+00 -1.83166051e-01  0.00000000e+00]
 [ 1.51653528e-01  2.66666667e+00  3.60822483e-16]
 [-1.04103606e-01  1.38554322e-01  2.00000000e+00]] 
 
 spec(redK_3D) =  [1.35450278 2.64549722 2.        ] 
 
 np.sqrt(||M_3D K - M_3D K M_3D^+M_3D ||^2) = 0.15015801063000625 
 
 redA_3D = M_3D A M_3D^+ =
 [[ 0.87098189  0.8105325  -0.56636363]
 [ 0.27017119  0.75729022  1.77768163]
 [-0.0395647   0.38980463  1.67308813]] 
 
 spec(redA_3D) =  [0.         1.1260325  2.17532775] 
 
 np.sqrt(||M_3D A - M_3D A M_3D^+M_3D ||^2) = 3.5657592681470545e-16

 (M_3D[0] + M_3D[1] + 4*M_3D[2])/6 =  [0.16483459 0.16710227 0.18501772 0.17764881 0.1526983  0.1526983 ] -> tout positif !